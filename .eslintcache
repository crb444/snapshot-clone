[{"/Users/chamira/snapchat-clone/src/index.js":"1","/Users/chamira/snapchat-clone/src/App.js":"2","/Users/chamira/snapchat-clone/src/app/store.js":"3","/Users/chamira/snapchat-clone/src/Camera.jsx":"4","/Users/chamira/snapchat-clone/src/Preview.jsx":"5","/Users/chamira/snapchat-clone/src/features/appData/cameraSlice.js":"6","/Users/chamira/snapchat-clone/src/firebase.js":"7","/Users/chamira/snapchat-clone/src/Chats.jsx":"8","/Users/chamira/snapchat-clone/src/Post.jsx":"9","/Users/chamira/snapchat-clone/src/features/appData/appSlice.js":"10","/Users/chamira/snapchat-clone/src/View.jsx":"11","/Users/chamira/snapchat-clone/src/Login.jsx":"12","/Users/chamira/snapchat-clone/src/LogoutAlert.jsx":"13"},{"size":354,"mtime":1610408754563,"results":"14","hashOfConfig":"15"},{"size":1488,"mtime":1610507669362,"results":"16","hashOfConfig":"15"},{"size":280,"mtime":1610424895583,"results":"17","hashOfConfig":"15"},{"size":1055,"mtime":1610426902870,"results":"18","hashOfConfig":"15"},{"size":1838,"mtime":1610507040235,"results":"19","hashOfConfig":"15"},{"size":466,"mtime":1610411363337,"results":"20","hashOfConfig":"15"},{"size":611,"mtime":1610414267807,"results":"21","hashOfConfig":"15"},{"size":1870,"mtime":1610507951281,"results":"22","hashOfConfig":"15"},{"size":1158,"mtime":1610507093086,"results":"23","hashOfConfig":"15"},{"size":802,"mtime":1610503811274,"results":"24","hashOfConfig":"15"},{"size":1237,"mtime":1610445960406,"results":"25","hashOfConfig":"15"},{"size":868,"mtime":1610503743635,"results":"26","hashOfConfig":"15"},{"size":1861,"mtime":1610508593396,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"xe8nph",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chamira/snapchat-clone/src/index.js",[],["61","62"],"/Users/chamira/snapchat-clone/src/App.js",["63"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Camera from \"./Camera\";\r\nimport Preview from \"./Preview\";\r\nimport Chats from \"./Chats\";\r\nimport View from \"./View\";\r\nimport Login from \"./Login\";\r\nimport {\r\n  resetUser,\r\n  selectLoggedUser,\r\n  saveUser,\r\n} from \"./features/appData/appSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectLoggedUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        dispatch(\r\n          saveUser({\r\n            userName: authUser.displayName,\r\n            profileUrl: authUser.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(resetUser());\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/chat\" exact>\r\n              <Camera />\r\n            </Route>\r\n            <Route path=\"/preview\" exact>\r\n              <Preview />\r\n            </Route>\r\n            <Route path=\"/\" exact>\r\n              <Chats />\r\n            </Route>\r\n            <Route path=\"/view\" exact>\r\n              <View />\r\n            </Route>\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/Users/chamira/snapchat-clone/src/app/store.js",[],"/Users/chamira/snapchat-clone/src/Camera.jsx",["64","65"],"import React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./Camera.css\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport { useDispatch } from \"react-redux\";\nimport { setImage } from \"./features/appData/cameraSlice\";\nimport { useHistory } from \"react-router-dom\";\n\nconst videoConstraints = {\n  width: 550,\n  height: 1000,\n  facingMode: \"user\",\n};\n\nfunction Camera() {\n  const webcamRef = useRef(null);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const capture = React.useCallback(() => {\n    dispatch(setImage(webcamRef.current.getScreenshot()));\n    history.push(\"/preview\");\n  }, [webcamRef]);\n\n  return (\n    <div className=\"camera\">\n      <Webcam\n        audio={false}\n        screenshotFormat=\"image/jpeg\"\n        ref={webcamRef}\n        videoConstraints={videoConstraints}\n        height=\"1000px\"\n        width=\"550px\"\n      />\n\n      <RadioButtonUncheckedIcon className=\"camera__button\" onClick={capture} />\n    </div>\n  );\n}\n\nexport default Camera;\n","/Users/chamira/snapchat-clone/src/Preview.jsx",["66","67","68"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetImage, selectImage } from \"./features/appData/cameraSlice\";\nimport { selectLoggedUser } from \"./features/appData/appSlice\";\nimport \"./Preview.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport { db, storage } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { HistoryOutlined } from \"@material-ui/icons\";\n\nfunction Preview() {\n  const image = useSelector(selectImage);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(selectLoggedUser);\n\n  const goBack = () => {\n    dispatch(resetImage());\n    history.push(\"./chat\");\n  };\n\n  useEffect(() => {\n    if (!image) {\n      history.push(\"./chat\");\n    }\n  }, [image]);\n\n  const sendPost = () => {\n    const id = uuid();\n    const uploadTask = storage.ref(`posts/${id}`).putString(image, \"data_url\");\n\n    uploadTask.on(\n      \"stage_changed\",\n      null,\n      (error) => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"posts\")\n          .child(id)\n          .getDownloadURL()\n          .then((url) => {\n            db.collection(\"posts\").add({\n              imageUrl: url,\n              username: user.userName,\n              read: false,\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              profileUrl: user.profileUrl,\n            });\n          });\n      }\n    );\n\n    history.push(\"./\");\n  };\n\n  return (\n    <div className=\"preview\">\n      <img src={image} />\n      <CloseIcon className=\"preview__close\" onClick={goBack} />\n      <button className=\"preview__send\" onClick={sendPost}>\n        Send\n      </button>\n    </div>\n  );\n}\n\nexport default Preview;\n","/Users/chamira/snapchat-clone/src/features/appData/cameraSlice.js",[],"/Users/chamira/snapchat-clone/src/firebase.js",[],"/Users/chamira/snapchat-clone/src/Chats.jsx",["69","70"],"import React, { useEffect, useState } from \"react\";\nimport \"./Chats.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { db } from \"./firebase\";\nimport Post from \"./Post\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectLoggedUser } from \"./features/appData/appSlice\";\nimport LogoutAlert from \"./LogoutAlert\";\n\nfunction Chats() {\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n  const user = useSelector(selectLoggedUser);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  const newSnap = () => {\n    history.push(\"./chat\");\n  };\n\n  return (\n    <div className=\"chats\">\n      <div className=\"chats__header\">\n        <LogoutAlert />\n        <div className=\"chats__headerSearch\">\n          <SearchIcon />\n          <input type=\"text\" placeholder=\"Friends\" />\n        </div>\n        <ChatBubbleIcon />\n      </div>\n      <div className=\"chats__feed\">\n        {posts?.map((post) => {\n          return (\n            <Post\n              key={post.id}\n              id={post.id}\n              username={post.data.username}\n              imageUrl={post.data.imageUrl}\n              read={post.data.read}\n              timestamp={post.data.timestamp}\n              profileUrl={post.data.profileUrl}\n            />\n          );\n        })}\n      </div>\n      <RadioButtonUncheckedIcon className=\"chats__newSnap\" onClick={newSnap} />\n    </div>\n  );\n}\n\nexport default Chats;\n","/Users/chamira/snapchat-clone/src/Post.jsx",[],"/Users/chamira/snapchat-clone/src/features/appData/appSlice.js",[],"/Users/chamira/snapchat-clone/src/View.jsx",["71","72"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSavedImage } from \"./features/appData/appSlice\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./View.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { resetSelectedImage } from \"./features/appData/appSlice\";\n\nfunction View() {\n  const imageUrl = useSelector(selectSavedImage);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!imageUrl) {\n      history.push(\"./\");\n    }\n  }, []);\n\n  const snapOver = () => {\n    console.log(\"timer is done\");\n    dispatch(resetSelectedImage());\n    history.push(\"./\");\n  };\n\n  return (\n    <div className=\"view\">\n      <img src={imageUrl} />\n      <div className=\"view__timer\">\n        <CountdownCircleTimer\n          isPlaying\n          duration={10}\n          colors={[\n            [\"#004777\", 0.33],\n            [\"#F7B801\", 0.33],\n            [\"#A30000\", 0.33],\n          ]}\n          size={70}\n          strokeWidth={6}\n          onComplete={snapOver}\n        >\n          {({ remainingTime }) => remainingTime}\n        </CountdownCircleTimer>\n      </div>\n    </div>\n  );\n}\n\nexport default View;\n","/Users/chamira/snapchat-clone/src/Login.jsx",["73","74"],"import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { saveUser } from \"./features/appData/appSlice\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n\n  const login = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) =>\n        dispatch(\n          saveUser({\n            userName: result.user.displayName,\n            profileUrl: result.user.photoURL,\n          })\n        )\n      )\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        className=\"login__logo\"\n        src=\"https://variety.com/wp-content/uploads/2017/11/snapchat-logo.jpg\"\n      />\n      <Button onClick={login}>Login</Button>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/chamira/snapchat-clone/src/LogoutAlert.jsx",["75","76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":50,"nodeType":"85","messageId":"86","endLine":2,"endColumn":54},{"ruleId":"83","severity":1,"message":"87","line":1,"column":25,"nodeType":"85","messageId":"86","endLine":1,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":24,"column":6,"nodeType":"90","endLine":24,"endColumn":17,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"92","line":11,"column":10,"nodeType":"85","messageId":"86","endLine":11,"endColumn":25},{"ruleId":"88","severity":1,"message":"93","line":28,"column":6,"nodeType":"90","endLine":28,"endColumn":13,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":62,"column":7,"nodeType":"97","endLine":62,"endColumn":26},{"ruleId":"83","severity":1,"message":"98","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},{"ruleId":"83","severity":1,"message":"99","line":17,"column":9,"nodeType":"85","messageId":"86","endLine":17,"endColumn":13},{"ruleId":"88","severity":1,"message":"100","line":18,"column":6,"nodeType":"90","endLine":18,"endColumn":8,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"96","line":28,"column":7,"nodeType":"97","endLine":28,"endColumn":29},{"ruleId":"83","severity":1,"message":"87","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":27,"column":7,"nodeType":"97","endLine":30,"endColumn":9},{"ruleId":"83","severity":1,"message":"102","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":21},{"ruleId":"83","severity":1,"message":"103","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":25},{"ruleId":"83","severity":1,"message":"104","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":19},{"ruleId":"83","severity":1,"message":"105","line":17,"column":9,"nodeType":"85","messageId":"86","endLine":17,"endColumn":17},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["108"],"'HistoryOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'imageUrl'. Either include them or remove the dependency array.",["110"],"'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'resetUser' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [dispatch, history]",{"range":"117","text":"118"},"Update the dependencies array to be: [history, image]",{"range":"119","text":"120"},"Update the dependencies array to be: [history, imageUrl]",{"range":"121","text":"122"},[680,691],"[dispatch, history]",[864,871],"[history, image]",[579,581],"[history, imageUrl]"]